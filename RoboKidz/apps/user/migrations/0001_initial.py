# Generated by Django 4.1.1 on 2022-11-30 05:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("Male", "male"), ("Female", "Female")], max_length=100
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("STUDENT", "STUDENT"),
                            ("MENTOR", "MENTOR"),
                            ("INSTITUTE", "INSTITUTE"),
                            ("ADMIN", "ADMIN"),
                        ],
                        max_length=100,
                    ),
                ),
                ("username", models.CharField(max_length=200, verbose_name="Username")),
                ("dob", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "contact_number",
                    models.CharField(blank=True, max_length=12, null=True),
                ),
                ("poc_name", models.CharField(blank=True, max_length=100, null=True)),
                ("poc_mobile", models.CharField(blank=True, max_length=16, null=True)),
                ("poc_email", models.EmailField(max_length=254)),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="First name"
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=30, verbose_name="Name"),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="Email address"),
                ),
                (
                    "mobile",
                    models.CharField(max_length=20, unique=True, verbose_name="Mobile"),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="State"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="City"
                    ),
                ),
                (
                    "parent_mobile",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Parent Mobile"
                    ),
                ),
                (
                    "parent_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Parent E-Mail",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Address"
                    ),
                ),
                (
                    "pin_code",
                    models.IntegerField(blank=True, null=True, verbose_name="Pin Code"),
                ),
                (
                    "workspace",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Work Space"
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Position"
                    ),
                ),
                (
                    "qualification",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Qualification",
                    ),
                ),
                ("parent_mobile_verified", models.BooleanField(default=False)),
                ("moile_verified", models.BooleanField(default=False)),
                ("parent_email_verified", models.BooleanField(default=False)),
                ("bio", models.TextField(verbose_name="Bio")),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="media",
                        verbose_name="ProfileImage",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user is a company admin or not.",
                        verbose_name="Company Admin",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether this user should be treated as active.",
                        verbose_name="active",
                    ),
                ),
                (
                    "abuse",
                    models.BooleanField(default=False, verbose_name="ReportAbuse"),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Date joined"
                    ),
                ),
                (
                    "is_private",
                    models.BooleanField(default=False, verbose_name="Is Private"),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "ordering": ["-pk"],
            },
        ),
        migrations.CreateModel(
            name="Grade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="PhoneModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mobile", models.CharField(max_length=16)),
                ("otp", models.CharField(max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name="School",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("is_active", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="FollowRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "pending"),
                            ("accepted", "accepted"),
                            ("rejected", "rejected"),
                        ],
                        max_length=200,
                        verbose_name="Status",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "receiver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follow_receiver",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Block",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "blocked_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blocked_users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="user",
            name="grade",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="user.grade",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="school",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="user.school",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
